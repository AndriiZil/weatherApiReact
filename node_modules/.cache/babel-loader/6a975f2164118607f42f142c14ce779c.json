{"ast":null,"code":"import _regeneratorRuntime from \"/home/andrii/REACT/weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/andrii/REACT/weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/andrii/REACT/weather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/andrii/REACT/weather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/andrii/REACT/weather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/andrii/REACT/weather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/andrii/REACT/weather/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/andrii/REACT/weather/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Info from './components/Info/Info';\nimport Form from './components/Form/Form';\nimport Weather from './components/Weather/Weather';\nvar API_KEY = '0b3909c83e4e4fc28d7898444ae7eb59';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      city: undefined,\n      country: undefined,\n      temp: undefined,\n      wind: undefined,\n      humidity: undefined,\n      pressure: undefined,\n      sunset: undefined,\n      error: undefined\n    };\n\n    _this.gettingWeather =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var city, api_url, data, sunset, date, h, m, s, time;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                city = event.target.elements.city.value;\n\n                if (!city) {\n                  _context.next = 21;\n                  break;\n                }\n\n                _context.next = 5;\n                return fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n\n              case 5:\n                api_url = _context.sent;\n                _context.next = 8;\n                return api_url.json();\n\n              case 8:\n                data = _context.sent;\n                sunset = data.sys.sunset;\n                date = new Date(sunset * 1000);\n                console.log(date);\n                h = date.getHours();\n                m = date.getMinutes();\n                s = date.getSeconds();\n                time = h + \":\" + m + \":\" + s;\n                console.log(time); // var hours = date.getHours();\n                // var minutes = date.getMinutes();\n                // var seconds = \"0\" + date.getSeconds();\n                //\n                // var formattedTime = hours + \":\" + minutes.substr(-2) + \":\" + seconds.substr(-2);\n                // console.log(formattedTime);\n                // var date = new Date();\n                // date.setTime(sunset);\n                // var sunset_date = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n\n                console.log(date);\n\n                _this.setState({\n                  city: data.name,\n                  country: data.sys.country,\n                  temp: data.main.temp,\n                  wind: data.wind.speed,\n                  humidity: data.main.humidity,\n                  pressure: data.main.pressure,\n                  sunrise: data.sys.sunrise,\n                  sunset: time,\n                  error: undefined\n                });\n\n                _context.next = 22;\n                break;\n\n              case 21:\n                _this.setState({\n                  city: undefined,\n                  country: undefined,\n                  temp: undefined,\n                  wind: undefined,\n                  humidity: undefined,\n                  pressure: undefined,\n                  sunrise: undefined,\n                  sunset: undefined,\n                  error: \"Введите название города\"\n                });\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"leftSide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"rightSide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Form, {\n        weatherMethod: this.gettingWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Weather, {\n        city: this.state.city,\n        country: this.state.country,\n        temp: this.state.temp,\n        wind: this.state.wind,\n        humidity: this.state.humidity,\n        pressure: this.state.pressure,\n        sunrise: this.state.sunrise,\n        sunset: this.state.sunset,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/andrii/REACT/weather/src/App.js"],"names":["React","Component","Info","Form","Weather","API_KEY","App","state","city","undefined","country","temp","wind","humidity","pressure","sunset","error","gettingWeather","event","preventDefault","target","elements","value","fetch","api_url","json","data","sys","date","Date","console","log","h","getHours","m","getMinutes","s","getSeconds","time","setState","name","main","speed","sunrise"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\n\nimport Info from './components/Info/Info';\nimport Form from './components/Form/Form';\nimport Weather from './components/Weather/Weather';\n\nconst API_KEY = '0b3909c83e4e4fc28d7898444ae7eb59';\n\nclass App extends Component {\n\n  state = {\n    city: undefined,\n    country: undefined,\n    temp: undefined,\n    wind: undefined,\n    humidity: undefined,\n    pressure: undefined,\n    sunset: undefined,\n    error: undefined\n  };\n\n  gettingWeather = async (event) => {\n    event.preventDefault();\n    const city = event.target.elements.city.value;\n\n    if (city) {\n      const api_url = await\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await api_url.json();\n\n      var sunset = data.sys.sunset;\n      var date = new Date(sunset*1000);\n      console.log(date);\n      var h = date.getHours();\n      var m = date.getMinutes();\n      var s = date.getSeconds();\n      var time = h + \":\" + m + \":\" + s;\n      console.log(time);\n      // var hours = date.getHours();\n      // var minutes = date.getMinutes();\n      // var seconds = \"0\" + date.getSeconds();\n      //\n      // var formattedTime = hours + \":\" + minutes.substr(-2) + \":\" + seconds.substr(-2);\n      // console.log(formattedTime);\n\n      // var date = new Date();\n      // date.setTime(sunset);\n      // var sunset_date = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n      console.log(date);\n\n      this.setState({\n        city: data.name,\n        country: data.sys.country,\n        temp: data.main.temp,\n        wind: data.wind.speed,\n        humidity: data.main.humidity,\n        pressure: data.main.pressure,\n        sunrise: data.sys.sunrise,\n        sunset: time,\n        error: undefined\n      })\n    } else {\n      this.setState({\n        city: undefined,\n        country: undefined,\n        temp: undefined,\n        wind: undefined,\n        humidity: undefined,\n        pressure: undefined,\n        sunrise: undefined,\n        sunset: undefined,\n        error: \"Введите название города\"\n      })\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"leftSide\">\n            <Info />\n          </div>\n          <div className=\"rightSide\">\n            <Form weatherMethod={this.gettingWeather} />\n            <Weather\n              city={this.state.city}\n              country={this.state.country}\n              temp={this.state.temp}\n              wind={this.state.wind}\n              humidity={this.state.humidity}\n              pressure={this.state.pressure}\n              sunrise={this.state.sunrise}\n              sunset={this.state.sunset}\n              error={this.state.error}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}